{% paginate collection.products by 8 %}
  <section class="collection-sec">
    <div class="top-bar">
      <span><a href="/">Home </a>&raquo; {{ collection.title }}</span>
      <div class="filter-wrap">
        <p>Sort By:</p>
        <select id="sort-by">
          {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
          {% for option in collection.sort_options %}
            <option
              value="{{ option.value }}"
              {% if option.value == sort_by %}
                selected="selected"
              {% endif %}
            >
              {{ option.name }}
            </option>
          {% endfor %}
        </select>
      </div>
    </div>
    <div
      style="
        display: flex;
        justify-content: center;
      "
    >
      <div class="products-grid">
        {% for product in collection.products %}
          <div class="product-card">
            <a href="{{ product.url }}">
              <img
                width="300"
                height="330"
                loading="lazy"
                src="{{ product.featured_image | image_url}}"
              >
              <div class="product-data">
                <p>{{- product.title }}</p>
                <p>{{- product.price | money }}</p>
              </div>
            </a>
          </div>
        {% endfor %}
      </div>
    </div>

    <div class="pagination">
      <ul>
        {% if paginate.previous %}
          <li class="prev"><a href="{{ paginate.previous.url }}">&laquo;</a></li>
        {% else %}
          <li class="prev disabled"><span>&laquo;</span></li>
        {% endif %}

        {% for part in paginate.parts %}
          {% if part.is_link %}
            <li>
              <a href="{{ part.url }}">{{ part.title }}</a>
            </li>
          {% elsif part.title == paginate.current_page %}
            <li class="active">
              <span>{{ part.title }}</span>
            </li>
          {% else %}
            <li class="disabled">
              <span>{{ part.title }}</span>
            </li>
          {% endif %}
        {% endfor %}

        {% if paginate.next %}
          <li class="next"><a href="{{ paginate.next.url }}">&raquo;</a></li>
        {% else %}
          <li class="next disabled"><span>&raquo;</span></li>
        {% endif %}
      </ul>
    </div>
  </section>
{% endpaginate %}

<style>
  .collection-sec {
    background: {{ section.settings.background }}
    ;
    color: {{ section.settings.text_color }}
    ;
    padding: 10px;
    display: flex;
    flex-direction:column;
  }
  .collection-sec a{
    text-decoration:none;
    color:#000000a8;
  }
  .top-bar{
    display: flex;
    color:#000000a8;
    flex-direction: column;
    padding: 24px 57px;
    gap:30px
  }
  .filter-wrap {
    display: flex;
    gap: 12px;
    align-items: center;
  }
  #sort-by {
    padding:10px;
  }
  .products-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);    /* Three columns */
    justify-items: center;
    width:86%;
  }

  .product-card {
    display:flex;
    width:19rem;
    flex-direction:column;
    padding: 10px;
    text-align: center;
  }

  .product-card img {
    max-width: 100%;
    height: auto;
  }
  .product-data{
    display:flex;
    padding-top:7px;
    justify-content:space-between;
  }
  .product-card a{
    text-decoration:none;
    color:black;
  }
  .pagination {
    text-align: center;
    margin: 20px 0;
  }

  .pagination ul {
    display: flex;
    padding: 0;
    margin: 0;
    justify-content: center;
  }

  .pagination li {
    display: inline;
    margin: 0 5px;
  }

  .pagination li a,
  .pagination li span {
    color: #333;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
    transition: background-color .3s;
    border: 1px solid #ddd;
    border-radius: 20px;
  }

  .pagination li a:hover:not(.active) {
    background-color: #ddd;
  }

  .pagination li.active span {
    background-color: #000000;
    color: white;
    border: 1px solid #000000;
  }

  .pagination li.disabled span {
    color: #ddd;
    cursor: not-allowed;
  }
</style>

<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function (e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>

{% schema %}
{
  "name": "collection",
  "settings": [
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#FFFFFF"
    }
  ],
  "presets": [
    {
      "name": "collection"
    }
  ]
}
{% endschema %}
